<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.oasis-open.org/docbook/4.5" xmlns:xl="http://www.w3.org/1999/xlink"
	xsi:schemaLocation="http://www.oasis-open.org/docbook/4.5 http://www.oasis-open.org/docbook/xsd/4.5/docbook.xsd">

	<title>Repository navigation</title>

	<chapterinfo>
		<abstract>
			<para>
				In this chapter we will learn how to use web service URLs to
				navigate the DataCleaner repository. The repository is available at
				the root level of the DataCleaner monitoring web application. Access
				is of course restricted to the tenant's home folder. Therefore, all
				these web services are located with URLs starting with the form:
			</para>
			<programlisting>/DataCleaner-monitor/repository/DC/...
			</programlisting>
			<para>Where 'DC' is the tenant identifier and 'DataCleaner-monitor'
				is the web application archive name.
			</para>
		</abstract>
	</chapterinfo>

	<section id="repository_nav_job_files">
		<title>Job files</title>
		<para>
			Job files are available in the reserved folder name 'jobs'. To
			get a listing of all job files (in JSON format), go to:
		</para>
		<programlisting>
			/DataCleaner-monitor/repository/DC/jobs
		</programlisting>
		<para>Where 'DC' is the tenant identifier and 'DataCleaner-monitor'
			is
			the web application archive name.
		</para>
		<para>The result will resemble this example result:</para>
		<programlisting lang="json">
			[
			&#160;&#160;{"repository_path":"/DC/jobs/Contributor&#160;name&#160;cleansing.analysis.xml",
			&#160;&#160;&#160;&#160;"name":"Contributor&#160;name&#160;cleansing","filename":"Contributor&#160;name&#160;cleansing.analysis.xml"},
			&#160;&#160;{"repository_path":"/DC/jobs/Customer&#160;completeness.analysis.xml",
			&#160;&#160;&#160;&#160;"name":"Customer&#160;completeness","filename":"Customer&#160;completeness.analysis.xml"},
			&#160;&#160;{"repository_path":"/DC/jobs/Customer&#160;duplicates.analysis.xml",
			&#160;&#160;&#160;&#160;"name":"Customer&#160;duplicates","filename":"Customer&#160;duplicates.analysis.xml"},
			&#160;&#160;{"repository_path":"/DC/jobs/product_profiling.analysis.xml",
			&#160;&#160;&#160;&#160;"name":"product_profiling","filename":"product_profiling.analysis.xml"}
			]
		</programlisting>
		<para>
			Further navigating to one of these repository paths, you will be
			able
			to read the full XML description of the job, as described in the
			<link linkend="job_files_xml_schema">Analysis Job files</link>
			chapter:
		</para>
		<programlisting>
			/DataCleaner-monitor/repository/DC/jobs/product_profiling.analysis.xml
		</programlisting>
		<para>Where 'DC' is the tenant identifier, 'product_profiling' is the
			name of the job and 'DataCleaner-monitor'
			is the web application
			archive name.
		</para>
	</section>

	<section id="repository_nav_result_files">
		<title>Result files</title>
		<para>
			Result files are available in the reserved folder name
			'results'. To
			get a listing of all job files (in JSON format), go to:
		</para>
		<programlisting>
			/DataCleaner-monitor/repository/DC/results
		</programlisting>
		<para>Where 'DC' is the tenant identifier and 'DataCleaner-monitor'
			is
			the web application archive name.
		</para>
		<para>The result will resemble this example result:</para>
		<programlisting lang="json">
			[
			&#160;&#160;{"repository_path":"/DC/results/Customer&#160;completeness-1345128427583.analysis.result.dat",
			&#160;&#160;&#160;&#160;"filename":"Customer&#160;completeness-1345128427583.analysis.result.dat"},
			&#160;&#160;{"repository_path":"/DC/results/Customer&#160;completeness-1345200106074.analysis.result.dat",
			&#160;&#160;&#160;&#160;"filename":"Customer&#160;completeness-1345200106074.analysis.result.dat"}
			]
		</programlisting>
		<para>
			Further navigating to one of these repository paths, you will be
			able to inspect the analysis result, rendered in HTML format.
		</para>
		<programlisting>
			/DataCleaner-monitor/repository/DC/results/Customer&#160;completeness-1345200106074.analysis.result.dat
		</programlisting>
		<para>Where 'DC' is the tenant identifier, 'Customer completeness' is
			the
			name of the job, '1345200106074' is the timestamp of the result
			and 'DataCleaner-monitor'
			is the web application archive name.
		</para>
	</section>

	<section id="repository_uploading_content">
		<title>Uploading content to the repository</title>
		<para>Files can be uploaded to the repository using HTTP POST upload
			requests. The types of uploadable files are:
		</para>

		<orderedlist>
			<listitem>
				<para>
					<emphasis>DataCleaner jobs (.analysis.xml files)</emphasis>
					, which are uploaded using this URL template:
				</para>
				<programlisting>POST&#160;/DataCleaner-monitor/repository/{tenant}/jobs/{job}.analysis.xml
				</programlisting>
				<para>Where the request parameter 'file' is a multi-part file
					containing the new job file content.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>DataCleaner results (.analysis.result.dat files)
					</emphasis>
					, which are uploaded using this URL template:
				</para>
				<programlisting>POST&#160;/DataCleaner-monitor/repository/{tenant}/results/{result}.analysis.result.dat
				</programlisting>
				<para>Where the request parameter 'file' is a multi-part file
					containing the new result file content.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Configuration (conf.xml file)</emphasis>
					, which are uploaded using this URL template:
				</para>
				<programlisting>POST&#160;/DataCleaner-monitor/repository/{tenant}/conf.xml
				</programlisting>
				<para>Where the request parameter 'file' is a multi-part file
					containing the configuration file content.
				</para>
			</listitem>
		</orderedlist>
	</section>

	<section id="modifying_result_metadata">
		<title>Modifying result metadata</title>
		<para>In some cases you can end up having results in the DataCleaner
			monitor repository which are not correctly configured. Specifically
			we sometimes see these situations:
		</para>

		<orderedlist>
			<listitem>
				<para>The registered date of the result might not be correct, if the
					result was created at a later time than the data it represents.
				</para>
			</listitem>
			<listitem>
				<para>The name of the associated job is wrong, if the result was
					uploaded from the desktop application but with a reference to a
					client-side job.
				</para>
			</listitem>
		</orderedlist>

		<para>To fix this situation, there is a result modification web
			service available. The service requires the ADMIN security role.
		</para>

		<para>The request URL is the same as the URL for inspecting the
			result, but where '.analysis.result.dat' is replaced with '.modify':
		</para>

		<programlisting>
			POST&#160;/DataCleaner-monitor/repository/{tenant}/results/{result}.modify
		</programlisting>

		<para>The POST request body needs to be a JSON document, specifying
			the new metadata for the result file. Here's an example:
		</para>

		<programlisting lang="json">
			{
			&#160;&#160;"job":"name&#160;of&#160;new&#160;job",
			&#160;&#160;"date":"2012-10-17&#160;21:47:00",
			&#160;&#160;"overwrite":true
			}
		</programlisting>

	</section>

	<section id="renaming_jobs">
		<title>Renaming jobs</title>
		<para>
			Renaming a job in the DataCleaner monitor repository is possible
			through a dedicated webservice for job modification.
		</para>

		<para>The request URL is the same as the URL for vieweing the
			job XML,
			but where '.analysis.xml' is replaced with '.modify':
		</para>

		<programlisting>
			POST&#160;/DataCleaner-monitor/repository/{tenant}/jobs/{job}.modify
		</programlisting>

		<para>The POST request body needs to be a JSON document, specifying
			the new metadata for the result file. Here's an example:
		</para>

		<programlisting lang="json">
			{
			&#160;&#160;"name":"new&#160;name&#160;of&#160;job",
			&#160;&#160;"overwrite":true
			}
		</programlisting>
	</section>
	
	<section id="copying_jobs">
		<title>Copying jobs</title>
		<para>
			Copying a job in the DataCleaner monitor repository is possible
			through a dedicated webservice for job copying.
		</para>

		<para>The request URL is the same as the URL for vieweing the
			job XML, but where '.analysis.xml' is replaced with '.copy':
		</para>

		<programlisting>
			POST&#160;/DataCleaner-monitor/repository/{tenant}/jobs/{job}.modify
		</programlisting>

		<para>The POST request body needs to be a JSON document, specifying
			the new metadata for the result file. Here's an example:
		</para>

		<programlisting lang="json">
			{
			&#160;&#160;"name":"name&#160;of&#160;copy&#160;"
			}
		</programlisting>
	</section>
	
	<section id="deleting_jobs">
		<title>Deleting jobs</title>
		<para>
			Deleting a job in the DataCleaner monitor repository is possible
			through a dedicated webservice for job deletion.
		</para>

		<para>The request URL is the same as the URL for vieweing the
			job XML, but where '.analysis.xml' is replaced with '.delete':
		</para>
		
		<para>Note also that <emphasis>ALL RELATED</emphasis> results, timelines and schedules will be deleted, when a job is deleted.</para>

		<programlisting>
			POST&#160;/DataCleaner-monitor/repository/{tenant}/jobs/{job}.delete
		</programlisting>

		<para>The POST request takes no parameters or body information.</para>

	</section>

</chapter>
